import React, { useState } from "react";
import { motion } from "framer-motion";
import { ArrowRight, Check } from "lucide-react";

// =======================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï
// =======================

function Section({ id, children, className = "", bg = "" }: { id?: string; children: React.ReactNode; className?: string; bg?: string }) {
  return (
    <section id={id} className={`${bg} relative mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 ${className}`}>
      {children}
    </section>
  );
}

function Button({ children, onClick, href }: { children: React.ReactNode; onClick?: () => void; href?: string }) {
  const base =
    "inline-flex items-center justify-center rounded-xl px-5 py-3 font-medium shadow-sm transition active:scale-95";
  const styles = "bg-white text-black hover:bg-zinc-100";
  if (href) {
    return (
      <a href={href} className={`${base} ${styles}`}>
        {children}
      </a>
    );
  }
  return (
    <button onClick={onClick} className={`${base} ${styles}`}>
      {children}
    </button>
  );
}

// =======================
// HERO
// =======================

function Hero({ onQuiz }: { onQuiz: () => void }) {
  return (
    <div className="relative bg-white text-black">
      <div className="mx-auto max-w-4xl py-20 text-center">
        <motion.h1 initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} className="text-4xl sm:text-6xl font-bold tracking-tight">
          TraffAgent ‚Äî —Ç—Ä–∞—Ñ–∏–∫ –∑–∞ –≥—Ä–∞–Ω—å—é —Ä–∞–∑—É–º–∞
        </motion.h1>
        <p className="mt-4 text-lg text-zinc-600">–ó–∞–ø—É—Å–∫–∞–µ–º —Ç—Ä–∞—Ñ –ø–æ–¥ –ª—é–±—ã–µ –Ω–∏—à–∏ –∏ —Ü–µ–ª–∏</p>

        <div className="mt-8 flex flex-col sm:flex-row justify-center gap-4">
          <Button onClick={onQuiz}>–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–∞—Ñ</Button>
          <Button href="https://t.me/traffagent">–ü–æ—Ö—É–π, –¥–µ–ª–∞–µ–º!</Button>
        </div>
      </div>

      {/* –ë–µ–≥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞ */}
      <div className="overflow-hidden border-t border-b border-zinc-200 bg-zinc-50 py-3">
        <div className="animate-marquee whitespace-nowrap text-sm text-zinc-600">
          Meta (Facebook + Instagram + Threads) ‚Ä¢ YouTube ‚Ä¢ TikTok ‚Ä¢ Google ‚Ä¢ Telegram ‚Ä¢ Twitter
        </div>
      </div>
    </div>
  );
}

// =======================
// –£–°–õ–£–ì–ò
// =======================

function Services({ onQuiz }: { onQuiz: () => void }) {
  const items = [
    "–õ–∏–¥—ã –≤ –±–∏–∑–Ω–µ—Å",
    "–ü—Ä–æ–¥–∞–∂–∏ –≤ E-com",
    "–ó–∞–ø—É—Å–∫–∏ –∏–Ω—Ñ–æ",
    "–§–∏–Ω—Ç–µ—Ö –∏ SaaS",
  ];
  return (
    <Section id="services" className="py-20 text-center">
      <h2 className="text-3xl font-bold">–£—Å–ª—É–≥–∏</h2>
      <div className="mt-10 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        {items.map((it) => (
          <div key={it} className="card rounded-xl border border-zinc-200 bg-white p-6 shadow-sm">
            <h3 className="font-semibold">{it}</h3>
            <p className="mt-2 text-sm text-zinc-500">–ó–∞–ø—É—Å–∫, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
            <div className="mt-4">
              <Button onClick={onQuiz}>–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–∞—Ñ</Button>
            </div>
          </div>
        ))}
      </div>
    </Section>
  );
}

// =======================
// –ü–ê–†–¢–ù–Å–†–´
// =======================

function Partners() {
  return (
    <Section id="partners" className="py-20 text-center bg-zinc-50">
      <h2 className="text-3xl font-bold">–ü–∞—Ä—Ç–Ω—ë—Ä—ã</h2>
      <p className="mt-4 text-zinc-600">–†–∞–±–æ—Ç–∞–µ–º —Å –∫—Ä—É–ø–Ω—ã–º–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∏ —Å–µ—Ç—è–º–∏</p>
    </Section>
  );
}

// =======================
// –¢–ê–†–ò–§–´
// =======================

function Pricing({ onQuiz }: { onQuiz: () => void }) {
  const plans = [
    { name: "–°—Ç–∞—Ä—Ç", price: "–æ—Ç $1k", desc: "–î–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤", features: ["–ó–∞–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º—ã", "–ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"] },
    { name: "–†–æ—Å—Ç", price: "%", desc: "–î–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è", features: ["–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ", "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"], highlight: true },
    { name: "Pro", price: "–æ—Ç $10k", desc: "–î–ª—è –±–æ–ª—å—à–∏—Ö –±—é–¥–∂–µ—Ç–æ–≤", features: ["–°—Ç—Ä–∞—Ç–µ–≥–∏—è", "–ö–æ–º–∞–Ω–¥–∞", "–ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"] },
  ];
  return (
    <Section id="pricing" className="py-20 text-center">
      <h2 className="text-3xl font-bold">–¢–∞—Ä–∏—Ñ—ã</h2>
      <div className="mt-10 grid grid-cols-1 sm:grid-cols-3 gap-6">
        {plans.map((p, i) => (
          <div key={i} className={`rounded-xl border p-6 text-left ${p.highlight ? "border-zinc-400" : "border-zinc-200"}`}>
            {p.highlight && <span className="mb-2 inline-block rounded-full border border-zinc-300 px-2 py-0.5 text-xs">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</span>}
            <h3 className="font-semibold text-lg">{p.name}</h3>
            <div className="mt-1 text-2xl font-bold">{p.price}</div>
            <p className="mt-1 text-sm text-zinc-600">{p.desc}</p>
            <ul className="mt-4 space-y-1 text-sm text-zinc-600">
              {p.features.map((f, idx) => (
                <li key={idx} className="flex items-center gap-2">
                  <Check className="h-4 w-4" /> {f}
                </li>
              ))}
            </ul>
            <div className="mt-5">
              <Button onClick={onQuiz}>–ë–µ—Ä–µ–º</Button>
            </div>
          </div>
        ))}
      </div>
    </Section>
  );
}

// =======================
// FAQ
// =======================

function FAQ() {
  const faqs = [
    { q: "–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç—Ä–∞—Ñ?", a: "–û–±—ã—á–Ω–æ –∑–∞ 1-3 –¥–Ω—è –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è." },
    { q: "–° –∫–∞–∫–∏–º–∏ –Ω–∏—à–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?", a: "E-com, SaaS, Mobile, –∏–Ω—Ñ–æ, —Ñ–∏–Ω—Ç–µ—Ö –∏ –¥—Ä—É–≥–∏–µ." },
    { q: "–ö–∞–∫–∏–µ –±—é–¥–∂–µ—Ç—ã –Ω—É–∂–Ω—ã?", a: "–ú–∏–Ω–∏–º—É–º –æ—Ç $1k –≤ –º–µ—Å—è—Ü." },
  ];
  return (
    <Section id="faq" className="py-20">
      <h2 className="text-3xl font-bold text-center">FAQ</h2>
      <div className="mt-10 max-w-2xl mx-auto space-y-6">
        {faqs.map((f, i) => (
          <div key={i} className="rounded-lg border border-zinc-200 bg-white p-5 shadow-sm">
            <h3 className="font-semibold">{f.q}</h3>
            <p className="mt-2 text-sm text-zinc-600">{f.a}</p>
          </div>
        ))}
      </div>
    </Section>
  );
}

// =======================
// –ö–í–ò–ó (—É–ø—Ä–æ—â—ë–Ω–Ω—ã–π)
// =======================

function QuizModal({ open, onClose }: { open: boolean; onClose: () => void }) {
  const [step, setStep] = useState(0);
  const questions = [
    { text: "–í–∞—à –±—é–¥–∂–µ—Ç?", options: ["–¥–æ $1k", "$1k‚Äì$5k", "$5k+"] },
    { text: "–ù–∏—à–∞?", options: ["E-com", "SaaS", "Mobile", "–ò–Ω—Ñ–æ", "–§–∏–Ω—Ç–µ—Ö", "–î—Ä—É–≥–æ–µ"] },
  ];

  if (!open) return null;
  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 px-4">
      <div className="w-full max-w-md rounded-xl bg-white p-6 text-black shadow-lg">
        {step < questions.length && (
          <>
            <h3 className="text-lg font-semibold">{questions[step].text}</h3>
            <div className="mt-4 space-y-2">
              {questions[step].options.map((o) => (
                <button
                  key={o}
                  onClick={() => setStep(step + 1)}
                  className="w-full rounded-lg border border-zinc-300 px-4 py-2 text-left hover:bg-zinc-100"
                >
                  {o}
                </button>
              ))}
            </div>
          </>
        )}
        {step === questions.length && (
          <div className="text-center space-y-4">
            <p className="font-medium">–°–ø–∞—Å–∏–±–æ! –î–∞–ª—å—à–µ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Telegram üëá</p>
            <a href="https://t.me/traffagent" target="_blank" className="inline-block rounded-lg bg-black px-4 py-2 text-white">
              –ü–µ—Ä–µ–π—Ç–∏
            </a>
          </div>
        )}
        <button onClick={onClose} className="mt-6 text-sm text-zinc-500 hover:underline">
          –ó–∞–∫—Ä—ã—Ç—å
        </button>
      </div>
    </div>
  );
}

// =======================
// APP
// =======================

export default function App() {
  const [quiz, setQuiz] = useState(false);
  return (
    <>
      <Hero onQuiz={() => setQuiz(true)} />
      <Services onQuiz={() => setQuiz(true)} />
      <Partners />
      <Pricing onQuiz={() => setQuiz(true)} />
      <FAQ />
      <QuizModal open={quiz} onClose={() => setQuiz(false)} />
    </>
  );
}
